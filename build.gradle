plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
// mybatis 추가30,  
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4' // 추가
	implementation 'org.springframework.security:spring-security-crypto:6.2.3'// 추가
	implementation 'org.mariadb.jdbc:mariadb-java-client'				// 추가
	implementation 'org.springframework.boot:spring-boot-starter-aop'	//추가
	implementation 'ch.qos.logback:logback-classic'						// 추가
	//implementation 'com.maxmind.geoip2:geoip2:4.1.0'
	
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// 0624 추가->메서드의 파라미터 이름 정보를 .class 파일에 포함시키기 위한 옵션
// 자바는 컴파일할 때 메서드의 파라미터 이름을 삭제해버리고, 그냥 arg0, arg1 식으로 바꿔버림
// 문제는 @RequestBody, @Param 등을 사용할 때 정확한 파라미터 이름이 없으면 매핑이 깨지거나 인식 못함-> 파라미터 이름 보존하기 위함
tasks.withType(JavaCompile) {
    options.compilerArgs += ["-parameters"]
}

